
PASS Running templatedRSEmpty with ReadableStream (empty) 
PASS instances have the correct methods and properties 
PASS Running templatedRSEmptyReader with ReadableStream (empty) reader 
PASS instances have the correct methods and properties 
PASS read() should return distinct promises each time 
PASS getReader() again on the stream should fail 
FAIL releasing the lock should cause further read() calls to resolve as if the stream is closed releaseLock is not implemented
FAIL releasing the lock should cause closed to fulfill releaseLock is not implemented
FAIL canceling via the reader should cause the reader to act closed cancel is not implemented
FAIL canceling via the stream should fail cancel is not implemented
PASS Running templatedRSClosed with ReadableStream (closed via call in start) 
FAIL cancel() should return a distinct fulfilled promise each time cancel is not implemented
PASS getReader() should be OK 
PASS should be able to acquire multiple readers, since they are all auto-released 
PASS Running templatedRSClosedReader with ReadableStream (closed via call in start) reader 
PASS read() should fulfill with { value: undefined, done: true } 
PASS closed should fulfill with undefined 
PASS Running templatedRSClosed with ReadableStream (closed via cancel) 
FAIL cancel() should return a distinct fulfilled promise each time cancel is not implemented
FAIL getReader() should be OK cancel is not implemented
FAIL should be able to acquire multiple readers, since they are all auto-released cancel is not implemented
PASS Running templatedRSClosedReader with ReadableStream (closed via cancel) reader 
FAIL read() should fulfill with { value: undefined, done: true } cancel is not implemented
FAIL closed should fulfill with undefined cancel is not implemented
PASS Running templatedRSErrored with ReadableStream (errored via call in start) 
PASS getReader() should return a reader that acts errored 
PASS Running templatedRSErroredSyncOnly with ReadableStream (errored via call in start) 
FAIL cancel() should return a distinct rejected promise each time cancel is not implemented
FAIL reader cancel() should return a distinct rejected promise each time cancel is not implemented
PASS should be able to acquire multiple readers, since they are all auto-released 
PASS Running templatedRSTwoChunksOpenReader with ReadableStream (two chunks enqueued, still open) reader 
TIMEOUT calling read() twice without waiting will eventually give both chunks Test timed out
TIMEOUT calling read() twice with waiting will eventually give both chunks Test timed out
PASS read() should return distinct promises each time 
FAIL cancel() after a read() should still give that single read result cancel is not implemented
PASS Running templatedRSTwoChunksClosedReader with ReadableStream (two chunks enqueued, then closed) reader 
FAIL third read(), without waiting, should give { value: undefined, done: true } assert_object_equals: first result should be correct property "done" expected object "[object Object]" got object "[object Object]"
FAIL third read, with waiting, should give { value: undefined, done: true } assert_object_equals: first result should be correct property "done" expected object "[object Object]" got object "[object Object]"
PASS draining the stream via read() should cause the reader closed promise to fulfill 
FAIL releasing the lock after the stream is closed should do nothing releaseLock is not implemented
FAIL releasing the lock should cause read() to act as if the stream is closed releaseLock is not implemented
FAIL reader's closed property always returns the same promise releaseLock is not implemented

